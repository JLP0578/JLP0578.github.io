import React from 'react'
import PropTypes from 'prop-types'

export default class Letter extends React.Component {  
/*
        █ ▓ ▒ ░

        ╗ ╦ ╩ ╔ ║ ═ ╝ ╚ ╣ ╠ ╬

        ####███████╗███╗###██╗████████╗
        ####██╔════╝████╗##██║╚══██╔══╝
        ####█████╗##██╔██╗#██║###██║###
        ####██╔══╝##██║╚██╗██║###██║###
        ####███████╗██║#╚████║###██║###
        ####╚══════╝╚═╝##╚═══╝###╚═╝###
*/
  generateAscii(text, betweenChar, spaceChar) {
    const asciiChars = {
      'A': [' █████╗ ', '██╔══██╗', '███████║', '██╔══██║', '██║  ██║', '╚═╝  ╚═╝'],
      'B': ['██████╗ ', '██╔══██╗', '██████╔╝', '██╔══██╗', '██████╔╝', '╚═════╝ '],
      'C': [' ██████╗','██╔════╝','██║     ','██║     ', '╚██████╗',' ╚═════╝'],
      'D': ['██████╗ ','██╔══██╗','██║  ██║','██║  ██║','██████╔╝','╚═════╝ '],
      'E': ['███████╗','██╔════╝','█████╗  ','██╔══╝  ','███████╗','╚══════╝'],
      'F': ['███████╗','██╔════╝','█████╗  ','██╔══╝  ','██║     ','╚═╝     '],
      'G': [' ██████╗ ','██╔════╝ ','██║  ███╗','██║   ██║','╚██████╔╝',' ╚═════╝ '],
      'H': ['██╗  ██╗','██║  ██║','███████║','██╔══██║','██║  ██║','╚═╝  ╚═╝'],
      'I': ['██╗','██║','██║','██║','██║','╚═╝'],
      'J': ['     ██╗','     ██║','     ██║','██╗  ██║','╚█████╔╝',' ╚════╝ '],
      'K': ['██╗  ██╗','██║ ██╔╝','█████╔╝ ','██╔═██╗ ','██║ ╚██╗','╚═╝  ╚═╝'],
      'L': ['██╗     ','██║     ','██║     ','██║     ','███████╗','╚══════╝'],
      'M': ['███╗   ███╗','████╗ ████║','██║████║██║','██║╚██╔╝██║','██║ ╚═╝ ██║','╚═╝     ╚═╝'],
      'N': ['███╗   ██╗','████╗  ██║','██╔██╗ ██║','██║╚██╗██║','██║ ╚████║','╚═╝  ╚═══╝'],
      'O': [' ██████╗ ','██╔═══██╗','██║   ██║','██║   ██║','╚██████╔╝',' ╚═════╝ '],
      'P': ['██████╗ ','██╔══██╗','██████╔╝','██╔═══╝ ','██║     ','╚═╝     '],
      'Q': [' ██████╗ ','██╔═══██╗','██║   ██║','██║▄▄ ██║',' ██████╔╝',' ╚══▀▀═╝ '],
      'R': ['██████╗ ','██╔══██╗','██████╔╝','██║  ██╗','██║  ██║','╚═╝  ╚═╝'],
      'S': ['███████╗','██╔════╝','███████╗','╚════██║','███████║','╚══════╝'],
      'T': ['████████╗','╚══██╔══╝','   ██║   ','   ██║   ','   ██║   ','   ╚═╝   '],
      'U': ['██╗   ██╗','██║   ██║','██║   ██║','██║   ██║','╚██████╔╝',' ╚═════╝ '],
      'V': ['██╗   ██╗','██║   ██║','██║   ██║','╚██╗ ██╔╝',' ╚████╔╝ ','  ╚═══╝  '],
      'W': ['██╗    ██╗','██║    ██║','██║ █╗ ██║','██║███╗██║','╚███╔███╔╝',' ╚══╝╚══╝ '],
      'X': ['██╗  ██╗',' ██╗██╔╝','  ███╔╝ ',' ██╔██╗ ','██╔╝ ██╗','╚═╝  ╚═╝'],
      'Y': ['██╗   ██╗','╚██╗ ██╔╝',' ╚████╔╝ ','  ╚██╔╝  ','   ██║   ','   ╚═╝   '],
      'Z': ['███████╗','╚══███╔╝','  ███╔╝ ',' ███╔╝  ','███████╗','╚══════╝'],
      '0': [' ██████╗ ','██╔═████╗','██║██╔██║','████╔╝██║','╚██████╔╝',' ╚═════╝ '],
      '1': [' ██╗','███║','╚██║',' ██║',' ██║',' ╚═╝'],
      '2': ['██████╗ ','╚════██╗',' █████╔╝','██╔═══╝ ','███████╗','╚══════╝'],
      '3': ['██████╗ ','╚════██╗',' █████╔╝',' ╚═══██╗','██████╔╝','╚═════╝ '],
      '4': ['██╗  ██╗','██║  ██║','███████║','╚════██║','     ██║','     ╚═╝'],
      '5': ['███████╗','██╔════╝','███████╗','╚════██║','███████║','╚══════╝'],
      '6': [' ██████╗ ','██╔════╝ ','███████╗ ','██    ██╗','╚██████╔╝',' ╚═════╝ '],
      '7': ['███████╗','╚════██║','    ██╔╝','   ██╔╝ ','   ██║  ','   ╚═╝  '],
      '8': [' █████╗ ','██╔══██╗','╚█████╔╝','██╔══██╗','╚█████╔╝',' ╚════╝ '],
      '9': [' █████╗ ','██╔══██╗','╚██████║','     ██║',' █████╔╝',' ╚════╝ '],
      ' ': [' ',' ',' ',' ',' ',' '],
      '!': ['██╗','██║','██║','╚═╝','██╗','╚═╝'],
      '?': ['██████╗ ','╚════██╗','  ▄███╔╝','  ▀▀══╝ ','  ██╗   ','  ╚═╝   '],
      '-': ['      ','      ','█████╗','╚════╝','      ','      '],
      '.': ['   ','   ','   ','   ','██╗','╚═╝'],
      '$': ['▄▄███▄▄╗','██╔════╝','███████╗','╚════██║','███████║','╚═▀▀▀══╝'],
      '\\': ['██╗    ','╚██╗   ',' ╚██╗  ','  ╚██╗ ','   ╚██╗','    ╚═╝'],
      '/': ['    ██╗','   ██╔╝','  ██╔╝ ',' ██╔╝  ','██╔╝   ','╚═╝    '],
      ',': ['   ','   ','   ','   ','▄█╗','╚═╝'],
      ';': ['   ','██╗','╚═╝','▄█╗','▀═╝','   '],
      '&': ['   ██╗   ','   ██║   ','████████╗','██╔═██╔═╝','██████║  ','╚═════╝  '],
      '_': ['        ','        ','        ','███████╗','╚══════╝','        '],
      '"': ['  ██╗','  ██║','  ╚═╝','     ','     ','     '],
      '\'':  ['  ██╗██╗','  ██║██║','  ╚═╝╚═╝','        ','        ','        '],
      '<': ['  ██╗',' ██╔╝','██╔╝ ','╚██╗ ',' ╚██╗','  ╚═╝'],
      '>': ['██╗  ',' ██╗ ','  ██╗',' ██╔╝','██╔╝ ','╚═╝  '],
      '(': [' ██╗','██╔╝','██║ ','██║ ','╚██╗',' ╚═╝'],
      ')': ['██╗ ','╚██╗',' ██║',' ██║','██╔╝','╚═╝ '],
      '{': ['  ██╗',' ██╔╝','███║ ',' ██║ ',' ╚██╗','  ╚═╝'],
      '}': ['██╗  ','╚██╗ ',' ███╗',' ██╔╝','██╔╝ ','╚═╝  '],
      '[': ['████╗','██╔═╝','██║  ','██║  ','████╗','╚═══╝'],
      ']': ['████╗','╚═██║','  ██║','  ██║','████║','╚═══╝'],
      '#': ['  ██╗ ██╗  ','██████████╗',' ╚██╔═██╔═╝','██████████╗',' ╚██╔═██╔═╝','  ╚═╝ ╚═╝  '],
      '*': ['      ','▄ ██╗▄',' ████╗','▀╚██║▀','  ╚═╝ ','      '],
      // Ajoutez les autres lettres et leurs correspondances ASCII ici
    }
    
    let asciiText = ''
    let lengthChar = asciiChars['A'].length
    for (let i = 0; i < lengthChar; i++) {
      let line = ''
      for (let j = 0; j < text.length; j++) {
        const char = text.charAt(j).toUpperCase()
        let asciiChar = asciiChars[char] || ['']
        asciiChar[i] = asciiChar[i].replace(/ /g, betweenChar)
        line += asciiChar[i] + spaceChar
      }
      asciiText += line + '\n'
    }
    return asciiText
  }
    

    
  render() {
    const text = this.props.text || Letter.defaultProps.text
    const spaceChar = this.props.spaceChar || Letter.defaultProps.spaceChar
    const betweenChar = this.props.betweenChar || Letter.defaultProps.betweenChar

    return (
      <pre className="asciiText">
        {this.generateAscii(text, betweenChar, spaceChar)}
      </pre>
    )
  }
}


Letter.propTypes = {
  text: PropTypes.string,
  spaceChar: PropTypes.string,
  betweenChar: PropTypes.string,
}

Letter.defaultProps = {
  text: '',
  spaceChar: '',
  betweenChar: '#',
}